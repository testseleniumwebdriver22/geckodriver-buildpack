#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -o errexit
set -o pipefail
set -o nounset
unset GIT_DIR

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

mkdir -p $CACHE_DIR

# Config Globals
PLATFORM=linux64

if [ -f $ENV_DIR/GECKODRIVER_VERSION ]; then
    VERSION=$(cat $ENV_DIR/GECKODRIVER_VERSION)
    echo "-----> Geckodriver version defined as: v${VERSION}"
else
    echo "-----> Searching for latest geckodriver version..."
    LATEST="https://github.com/mozilla/geckodriver/releases"
    VERSION=$(grep -om 1 '">v.*' <(curl -s $LATEST) | cut -c 4-9)
    echo "-----> Found geckodriver version: v${VERSION}"
fi

rm -f $CACHE_DIR/error_log.txt

# Buildpack URL
ARCHIVE_NAME=geckodriver
FILE_NAME=${ARCHIVE_NAME}-${VERSION}.tar.gz
BUILDPACK_GECKODRIVER_PACKAGE="https://github.com/mozilla/geckodriver/releases/download/v0.30.0/geckodriver-v0.30.0-linux64.tar.gz"

if ! [ -e $CACHE_DIR/$FILE_NAME ]; then
    echo "-----> Fetching geckodriver package from ${BUILDPACK_GECKODRIVER_PACKAGE}"
    curl -s $BUILDPACK_GECKODRIVER_PACKAGE -L -o $CACHE_DIR/$FILE_NAME
fi

echo "-----> Extracting geckodriver binaries to ${BUILD_DIR}/vendor/${ARCHIVE_NAME}"
mkdir -p $CACHE_DIR/$ARCHIVE_NAME
mkdir -p $BUILD_DIR/vendor
tar xzf $CACHE_DIR/$FILE_NAME -C $CACHE_DIR
mv $CACHE_DIR/$ARCHIVE_NAME $BUILD_DIR/vendor/
